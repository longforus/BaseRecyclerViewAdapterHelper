apply plugin: 'com.android.library'
android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }


}

// 打包源码jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 打包文档jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    def recyclerview_version = "1.1.0"

    compileOnly "androidx.recyclerview:recyclerview:$recyclerview_version"
    def paging_version = "2.1.1"

    compileOnly "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61"
}


apply plugin: 'maven'
def GROUP = "com.github.CymChad"
def POM_ARTIFACT_ID = 'BaseRecyclerViewAdapterHelper'
def VERSION_CODE = "2.9.49-androidx-xm8"
def UPLOAD_DESC = "修改自动滚动的bug,修改position取值"
def properties = new Properties()
def inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load( inputStream )
uploadArchives {
    doFirst {
        logger.quiet("---------------------------start upload--------------------------------\t\n")
        logger.quiet(String.format("groupId = %s\t\nartifactId = %s\t\nversion = %s\t\nuploadDesc = %s\t\n", GROUP, POM_ARTIFACT_ID, VERSION_CODE, UPLOAD_DESC))
    }
    doLast {
        logger.quiet("---------------------------upload finish--------------------------------")
    }
    repositories {
        mavenDeployer {
            repository(url:properties.getProperty('privteMavenUrl')) {
                authentication(userName: "admin", password: "admin123")
            }
            pom.project {
                version VERSION_CODE
                artifactId POM_ARTIFACT_ID
                groupId GROUP
                description UPLOAD_DESC
            }
        }
    }
}